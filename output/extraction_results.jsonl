{"extractions": [{"extraction_class": "Product", "extraction_text": "Langfun", "char_interval": {"start_pos": 1, "end_pos": 8}, "alignment_status": "match_exact", "extraction_index": 1, "group_index": 0, "description": null, "attributes": {"description": "A PyGlove powered library for language models"}}, {"extraction_class": "Concept", "extraction_text": "PyGlove", "char_interval": {"start_pos": 14, "end_pos": 21}, "alignment_status": "match_exact", "extraction_index": 2, "group_index": 1, "description": null, "attributes": {"description": "A library that powers Langfun"}}, {"extraction_class": "Concept", "extraction_text": "language models", "char_interval": {"start_pos": 56, "end_pos": 71}, "alignment_status": "match_fuzzy", "extraction_index": 3, "group_index": 2, "description": null, "attributes": {"description": "AI models that process and generate natural language"}}, {"extraction_class": "Concept", "extraction_text": "Object-Oriented Prompting", "char_interval": {"start_pos": 255, "end_pos": 280}, "alignment_status": "match_fuzzy", "extraction_index": 4, "group_index": 3, "description": null, "attributes": {"description": "A technique to prompt LLMs using objects and types"}}, {"extraction_class": "Concept", "extraction_text": "LLMs", "char_interval": {"start_pos": 315, "end_pos": 319}, "alignment_status": "match_fuzzy", "extraction_index": 5, "group_index": 4, "description": null, "attributes": {"description": "Large Language Models"}}, {"extraction_class": "Product", "extraction_text": "Gemini", "char_interval": {"start_pos": 528, "end_pos": 534}, "alignment_status": "match_fuzzy", "extraction_index": 6, "group_index": 5, "description": null, "attributes": {"description": "A large language model compatible with Langfun"}}, {"extraction_class": "Product", "extraction_text": "GPT", "char_interval": {"start_pos": 536, "end_pos": 539}, "alignment_status": "match_fuzzy", "extraction_index": 7, "group_index": 6, "description": null, "attributes": {"description": "A large language model compatible with Langfun"}}, {"extraction_class": "Product", "extraction_text": "Claude", "char_interval": {"start_pos": 541, "end_pos": 547}, "alignment_status": "match_fuzzy", "extraction_index": 8, "group_index": 7, "description": null, "attributes": {"description": "A large language model compatible with Langfun"}}, {"extraction_class": "Relationship", "extraction_text": "Langfun aims to make language models fun to work with", "char_interval": {"start_pos": 1, "end_pos": 93}, "alignment_status": "match_fuzzy", "extraction_index": 9, "group_index": 8, "description": null, "attributes": {"subject": "Langfun", "relation": "aims to make", "object": "language models fun to work with", "evidence": "Langfun is a PyGlove powered library that aims to make language models (LM) fun to work with"}}, {"extraction_class": "Relationship", "extraction_text": "Langfun enables integration between natural language and programming", "char_interval": {"start_pos": 1, "end_pos": 191}, "alignment_status": "match_fuzzy", "extraction_index": 10, "group_index": 9, "description": null, "attributes": {"subject": "Langfun", "relation": "enables", "object": "integration between natural language and programming", "evidence": "Its central principle is to enable seamless integration between natural language and programming by treating language as functions"}}], "text": "\nLangfun is a PyGlove powered library that aims to make language models (LM) fun to work with. Its central principle is to enable seamless integration between natural language and programming by treating language as functions. Through the introduction of Object-Oriented Prompting, Langfun empowers users to prompt LLMs using objects and types, offering enhanced control and simplifying agent development.\n\nTo unlock the magic of Langfun, you can start with Langfun 101. Notably, Langfun is compatible with popular LLMs such as Gemini, GPT, Claude, all without the need for additional fine-tuning.\n", "document_id": "doc_1164644f"}
